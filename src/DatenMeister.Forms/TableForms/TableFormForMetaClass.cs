using DatenMeister.Core.Models;
using DatenMeister.Forms.Fields;
using DatenMeister.Forms.FormFactory;

namespace DatenMeister.Forms.TableForms;

public class TableFormForMetaClass : ITableFormFactory
{
    /// <summary>
    /// Creates the Table Form
    /// </summary>
    /// <param name="parameter"></param>
    /// <param name="context"></param>
    /// <param name="result"></param>
    public void CreateTableForm(
        TableFormFactoryParameter parameter,
        FormCreationContext context,
        FormCreationResultMultipleForms result)
    {
        if (result.IsMainContentCreated)
            return;
        
        var metaClass = parameter.MetaClass;

        if (metaClass != null)
        {   
            if (!result.Forms.Any())
            {
                result.Forms.Add(context.Global.Factory.create(_Forms.TheOne.__RowForm));
            };
        
            var createdForm = result.Forms.First();
            createdForm.set(_Forms._TableForm.isAutoGenerated, true);

            result.AddToFormCreationProtocol(
                "[TableFormFromData.CreateTableFormForProperty]");

            FieldCreationHelper.AddFieldsToRowOrTableFormByMetaClass(createdForm, metaClass, context);
            createdForm.set(_Forms._TableForm.metaClass, metaClass);

            result.IsManaged = result.IsMainContentCreated = true;
        }
    }
}