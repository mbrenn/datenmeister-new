using DatenMeister.Core.EMOF.Interface.Common;
using DatenMeister.Core.EMOF.Interface.Reflection;
using DatenMeister.Core.Models;
using DatenMeister.Core.Uml.Helper;
using DatenMeister.Forms.Fields;
using DatenMeister.Forms.FormFactory;
using DatenMeister.Forms.Helper;

namespace DatenMeister.Forms.TableForms;

public class TableFormFromData : INewTableFormFactory
{

    public void CreateTableForm(
        TableFormFactoryParameter parameter,
        NewFormCreationContext context,
        FormCreationResult result)
    {
        var metaClass = parameter.MetaClass;
        var collection = parameter.Collection;

        if (metaClass != null)
        {
            result.Form ??= context.Global.Factory.create(_Forms.TheOne.__TableForm);
            result.Form.set(_Forms._TableForm.isAutoGenerated, true);

            result.AddToFormCreationProtocol(
                "[TableFormFromData.CreateTableFormForProperty]");

            FieldCreationHelper.AddFieldsToRowOrTableFormByMetaClass(result.Form, metaClass, context);
            result.Form.set(_Forms._TableForm.metaClass, metaClass);
            FormMethods.AddDefaultTypeForNewElement(result.Form, metaClass);

            result.AddToFormCreationProtocol(
                "[TableFormFromData.CreateTableFormForProperty] Set default type: " +
                NamedElementMethods.GetName(metaClass));

            result.IsManaged = result.IsMainContentCreated = true;
        }
        else if (collection != null)
        {
            result.Form ??= context.Global.Factory.create(_Forms.TheOne.__TableForm);
            result.Form.set(_Forms._TableForm.isAutoGenerated, true);

            // Figure out only the elements which have common properties
            foreach (var element in collection.OfType<IObject>())
            {
                var innerMetaClass = (element as IElement)?.metaclass;
                if (innerMetaClass != null)
                {
                    FieldCreationHelper.AddFieldsToRowOrTableFormByMetaClass(
                        result.Form,
                        innerMetaClass,
                        context);
                }
            }

            result.IsManaged = result.IsMainContentCreated = true;
        }
    }
}