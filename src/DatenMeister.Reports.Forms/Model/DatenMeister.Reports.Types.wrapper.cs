using DatenMeister.Core.Interfaces.MOF.Reflection;
using DatenMeister.Core.Helper;

// ReSharper disable InconsistentNaming
// ReSharper disable RedundantNameQualifier
// Created by DatenMeister.SourcecodeGenerator.WrapperTreeGenerator Version 1.3.0.0
namespace DatenMeister.Reports.Forms.Model;

public class Root
{
    [TypeUri(Uri = "dm:///_internal/types/internal#89dea433-d199-4889-95eb-7ef30c0b5695",
        TypeKind = TypeKind.WrappedClass)]
    public class ReportForm_Wrapper(IElement innerDmElement) : IElementWrapper
    {
        public IElement GetWrappedElement() => innerDmElement;

        public string? @name
        {
            get =>
                innerDmElement.getOrDefault<string?>("name");
            set => 
                innerDmElement.set("name", value);
        }

        public string? @title
        {
            get =>
                innerDmElement.getOrDefault<string?>("title");
            set => 
                innerDmElement.set("title", value);
        }

        public bool @isReadOnly
        {
            get =>
                innerDmElement.getOrDefault<bool>("isReadOnly");
            set => 
                innerDmElement.set("isReadOnly", value);
        }

        public bool @isAutoGenerated
        {
            get =>
                innerDmElement.getOrDefault<bool>("isAutoGenerated");
            set => 
                innerDmElement.set("isAutoGenerated", value);
        }

        public bool @hideMetaInformation
        {
            get =>
                innerDmElement.getOrDefault<bool>("hideMetaInformation");
            set => 
                innerDmElement.set("hideMetaInformation", value);
        }

        public string? @originalUri
        {
            get =>
                innerDmElement.getOrDefault<string?>("originalUri");
            set => 
                innerDmElement.set("originalUri", value);
        }

        public string? @originalWorkspace
        {
            get =>
                innerDmElement.getOrDefault<string?>("originalWorkspace");
            set => 
                innerDmElement.set("originalWorkspace", value);
        }

        public string? @creationProtocol
        {
            get =>
                innerDmElement.getOrDefault<string?>("creationProtocol");
            set => 
                innerDmElement.set("creationProtocol", value);
        }

    }

    [TypeUri(Uri = "dm:///_internal/types/internal#a6f3a0e0-c7f6-4b67-b96f-252f3cf1f27c",
        TypeKind = TypeKind.WrappedClass)]
    public class RequestReportAction_Wrapper(IElement innerDmElement) : IElementWrapper
    {
        public IElement GetWrappedElement() => innerDmElement;

        public string? @workspace
        {
            get =>
                innerDmElement.getOrDefault<string?>("workspace");
            set => 
                innerDmElement.set("workspace", value);
        }

        public string? @itemUri
        {
            get =>
                innerDmElement.getOrDefault<string?>("itemUri");
            set => 
                innerDmElement.set("itemUri", value);
        }

        public string? @name
        {
            get =>
                innerDmElement.getOrDefault<string?>("name");
            set => 
                innerDmElement.set("name", value);
        }

        public bool @isDisabled
        {
            get =>
                innerDmElement.getOrDefault<bool>("isDisabled");
            set => 
                innerDmElement.set("isDisabled", value);
        }

    }

    [TypeUri(Uri = "dm:///_internal/types/internal#75aaa247-9e5d-4f8c-ad11-8ba43d996684",
        TypeKind = TypeKind.WrappedClass)]
    public class RequestReportResult_Wrapper(IElement innerDmElement) : IElementWrapper
    {
        public IElement GetWrappedElement() => innerDmElement;

        public string? @report
        {
            get =>
                innerDmElement.getOrDefault<string?>("report");
            set => 
                innerDmElement.set("report", value);
        }

    }

}

